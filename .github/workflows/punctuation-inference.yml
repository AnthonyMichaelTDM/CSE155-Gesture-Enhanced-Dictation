# This checks formatting, runs tests, and builds the project.

name: "CI (Punctuation Inference)"

on:
  workflow_dispatch:
  push:
    branches: ["main"]
    paths:
      - .github/workflows/punctuation-inference.yml
      - ./punctuation-inference/**
  pull_request:
    paths:
      - .github/workflows/punctuation-inference.yml
      - ./punctuation-inference/**

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: "full"

concurrency:
  group: Puncuation-CI-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # Run format separately.
  #
  # This will fast-cancel other CI early if this fails.
  #
  # `cargo fmt` checks _all_ code, regardless of the OS
  # or any `#[cfg]`'s, so this only needs to run on Linux.
  fmt:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: punctuation-inference
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Format
        run: cargo fmt --check --all

  # Runs cargo machete, which checks for unused dependencies.
  machete:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: punctuation-inference
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Machete
        uses: bnjbvr/cargo-machete@main

  ci:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: punctuation-inference
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        run: |
          rustup show
          rustup -V
          rustup set profile minimal
          rustup toolchain install stable
          rustup override set stable

      - name: Setup cache
        uses: Swatinem/rust-cache@v2
        with:
          save-if: ${{ github.ref == 'refs/heads/main' }}

      - name: Run tests
        run: cargo test

      - name: Clippy
        run: cargo clippy -- -D warnings
